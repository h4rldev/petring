html {
	--primary: rgba(94, 33, 94, 1);
  --secondary: rgba(41, 41, 41, 1);
	--accent-1: #9f8083;
	--accent-2: #66232e;
	--accent-3: #44131a;
	color: white;
	background: black;
}

.div-meow {
	display: flex;
  flex-direction: column;
  justify-content: space-between;
	align-items: center;
	margin-top: 10px;
}

/* rewrite */

.header-meow {
	background: #9b2a97;
	background: linear-gradient(0deg,var(--primary) 0%, var(--secondary) 100%);
	height: 75px;

	border: 1px solid var(--primary);
	outline-offset: 0px;
}

.header-inner {
	display: flex;
	gap: 20px;
	height: 100%;
	/* justify-content: center; */
  align-items: center;

	margin-left: 20px;
	margin-right: 20px;
}

.header-element {

}

.logo {
	margin-left: 5px;
	margin-right: 5px;
}

.content-wrapper {
	background: #9b2a97;
	background: linear-gradient(180deg,var(--primary) 0%, var(--secondary) 100%);
	border: 1px solid var(--primary);
	outline-offset: 0px;
	border-radius: 5px;
}

/* */

.side-bar {
	display: flex;
	width: 300px;
	flex-direction: column;
	align-items: flex-start;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@keyframes counter-spin {
    0% {
        transform: rotate(0)
    }

    to {
        transform: rotate(-360deg)
    }
}

.window {
	margin-bottom: 5px;
}

.spin-parent {
  position: relative;
  margin: auto;
  /* max-width: 21.5rem; */
  /* min-height: 21.5rem; */
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
  align-items: center;
	width: 500px;
	height: 450px;
}

.spin-center {
  position: absolute;
  z-index: 2;
}

.spin-items-wrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  animation: spin 40s linear infinite;
}
.side-bar-content-wrap {

}

.side-bar-content-inner {
	background-color: red;
}

.items-wrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  animation: spin 40s linear infinite;
}

.spin-item {
  position: absolute;
  left: 50%;
  height: 50%;
	text-align: left;
  transform-origin: center bottom;
  transform: translate(-50%) rotate(calc((360deg / var(--amount-of-element, 1)) * var(--nth-element, 1)));
}

.spin-item > div {
  --base-rotation: calc((360deg / var(--amount-of-element, 1)) * var(--nth-element, 1));
  transform: rotate(0);
  animation: counter-spin 40s linear infinite;
}

.spin-item-inner {
	a {
		display: inline-block;
		transform: rotate(0deg);
		transition: 0.3s;
	}
	a:hover {
		font-size: 24px;
	}
}

a:link {
	color: #4b4beb;
}

a:visited {
	color: #67418a;
}
